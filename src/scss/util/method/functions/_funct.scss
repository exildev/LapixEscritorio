
@function get-colors($nombre,$vals){
    $map: map-get($trama, $nombre);
    $aux:();
    @each $val in $vals{
        $value: ($val: map-get($map, $val));
        $aux: map-merge($aux, $value);
    }
    //end-each
    @return $aux;
}
//end-function

@function get-pri($val){
    @return map-get($primario, $val);
}
//end-function

@function get-sec($val){
    @return map-get($secundario, $val);
}
//end-function

@function get-act($val){
    @return map-get($acento, $val);
}
//end-function

@function get-alfa($val){
    @return map-get($alfa, $val);
}
//end-function

@function h_porc($val,$hh:$h){
    @return percentage($val/$hh);
}
//end-function

@function w_porc($val,$ww:$w){
    @return percentage($val/$ww);
}
//end-function

@function border_solid($color,$w:1px){
    @return $w solid $color; 
}
//end-function

@function g_rgb($val,$alfa:null){
    $res: rgb($val,$val,$val);
    @if $alfa {
       @return rgba($res,$alfa);
    }@else{
        @return $res;
    }
    //end-if   
}
//end-function

@function array_to_string($v){
    $res:null;
    @if $v{
        @each $val in $v{
            $res: $res#{$val};
        }
        //end-each     
    }
    //end-if
    @return $res;
}
//end-function

@function char_replace($str, $char, $replase){
    $flag: true;
    @while $flag {
        $index: str-index($str, $char);
        @if not $index {
            $flag: false;
        }@else {
            $str1: str-slice($str, 1, $index - 1);
            $str2: str-slice($str, $index + 1);
            $str: #{$str1}#{$replase}#{$str2};
        }
        //end-if
    }
    //end-while
    @return $str;
}
//end-function

@function simple_char_replace($str,$chars,$replase:'_'){
    @each $char in $chars{
        $str: char_replace($str,$char,$replase);
    }
    //end-each
    @return $str;
}
//end-function

@function map_to_string($v){
    $res:null;
    @if $v{
        @each $key in map-keys($v){
            $res: $res#{$key}#{map-get($v,$key)};
        }
        //end-each
    }
    //end-if
    @return $res;
}
//end-function

@function gray($t,$alfa:1){
    @return rgba($t,$t,$t,$alfa);
}
//end-function

@function black($alfa:1){
    @return gray(0,$alfa);
}
//end-function

@function white($alfa:1){
    @return gray(255,$alfa);
}
//end-function

@function c-iz1($alfa:1){
    @return rgba(map-get($colors,'iz1'),$alfa);
}
//end-function

@function c-iz2($alfa:1){
    @return rgba(map-get($colors,'iz2'),$alfa);
}
//end-function


@function c-base($alfa:1){
    @return rgba(map-get($colors,'base'),$alfa);
}
//end-function

@function c-dr1($alfa:1){
    @return rgba(map-get($colors,'dr1'),$alfa);
}
//end-function

@function c-dr2($alfa:1){
    @return rgba(map-get($colors,'dr2'),$alfa);
}
//end-function



@function font($key){
    @return map-get($font,$key);
}
//end-function

@function em($px,$base:$font_size){
    @return #{$px/$base}em;
}
//end-function

// $key values: smart_v=320 || smart_h=480 || tablet_v=768 || tablet_h=1024 || desktop=1280 || wide=1680  
@function scren($key){
    @return map-get($scren,$key);
}
//end-function

// $key values: smart_v=320px || smart_h=480px || tablet_v=768px || tablet_h=1024px || desktop=1280px || wide=1680px  
@function screnpx($key){
    @return #{map-get($scren,$key)}px;
}
//end-function

@function hsv($h, $s: 0, $v: 0) {
        $pi: 3.1415;
	@if type_of($h) == 'list' {
            $v: nth($h, 3);
            $s: nth($h, 2);
            $h: nth($h, 1);
	}
    //end-if
	@if unit($h) == 'deg' {
            $h: $pi * 2 * ($h / 360deg);
	}
    //end-if
	@if unit($s) == '%' {
            $s: 0 + ($s / 100%);
	}
    //end-if
	@if unit($v) == '%' {
            $v: 0 + ($v / 100%);
	}
    //end-if
	$ss: $s * $v;
	$ll: (2 - $s) * $v;
	@if $ll <= 1 {
            $ss: $ss / $ll;
	}@else if ($ll == 2) {
            $ss: 0;
	}@else {
            $ss: $ss / (2 - $ll);
	}
    //end-if
	$ll: $ll / 2;
        $h1: 360deg * $h / ($pi * 2);
        $s1: percentage( max( 0, min( 1, $ss)));
        $l1: percentage( max( 0, min( 1, $ll)));
        @return hsl($h1,$s1,$l1);
}
//end-function


@function m_center($d1, $d2){
    @return ($d1 - $d2) / 2
}
//end-function

@function colormono($h, $s, $pos){
    //@warn "color #{hsl($h,$s,100%)}h->#{$h}s->#{$s}"; 
    @each $key, $value in  (1:50%,  2:100%,  3:100%, 4:50%, 5:80%) {
        @if $pos == $key{
            @if ($key % 2)==0{
                @if $s>=0% and $s<40%{
                    $s: $s + 30%;
                }@else if $s >= 40% and $s < 80%{
                    $s: $s - 20%;
                }@else {
                    $s: $s - 30%;
                }
                //end-if
            }
            //end-if
            //@warn "hsv(#{$h}, #{$s}, #{$value})";
            @return hsv($h, $s, $value);
        }
        //end-if
    }
    //end-each    
}
//end-function

@function fullmin($val){
    @return calc(100% - $val);
}
//end-function

@function colorshades($h, $s, $pos){
    //@warn "color #{hsl($h,$s,100%)} h->#{$h}s->#{$s}"; 
    @each $key, $value in  (1:75%,  2:50%,  3:100%, 4:25%, 5:90%) {
        @if $pos == $key{
            @return hsv($h, $s, $value);
        }
        //end-if
    }
    //end-each    
}
//end-function